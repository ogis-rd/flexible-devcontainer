name: "CI - Test Features"
on:
  push:
    branches:
      - main
      - feature/*
      - v*
    tags:
      - v*
  workflow_dispatch:
  schedule:
    - cron: '0 13 * * 3' # 毎週水曜日の13:00（UTC）、日本時間の22:00に実行
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu-version: ${{ vars.UBUNTU_VERSIONS != '' && fromJSON(vars.UBUNTU_VERSIONS) || [22.04, 24.04] }}
    steps:
      - uses: actions/checkout@v4

      - name: "Copy files to the build directory"
        run: |
          for dir in ./src/features/src/*; do
            if [ -d "$dir" ]; then
              cp -f ./src/features/common/scripts/common.sh "$dir"
            fi
          done

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./.devcontainer
          file: ./.devcontainer/Dockerfile
          tags: ghcr.io/ogis-rd/flexible-devcontainer/flexible-devcontainer:test
          cache-from: type=gha
          cache-to: type=gha, mode=max
          push: false
          load: true
          build-args: |
            USERNAME=test
            UBUNTU_VERSION=${{ matrix.ubuntu-version }}

      - name: Reset docker build context
        run: docker buildx use default

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Executing all tests"
        run: devcontainer features test -p src/features --skip-autogenerated --skip-duplicated

  test-with-cert:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu-version: ${{ vars.UBUNTU_VERSIONS != '' && fromJSON(vars.UBUNTU_VERSIONS) || [22.04, 24.04] }}
    steps:
      - uses: actions/checkout@v4

      - name: Generate dummy certificate
        run: |
          openssl genpkey -algorithm RSA -out private.key -aes256 -pass pass:test
          openssl req -new -key private.key -out request.csr -passin pass:test -subj "/C=JP/ST=DummyState/L=DummyCity/O=DummyOrg/OU=DummyUnit/CN=ogis-ri.co.jp"  
          openssl x509 -req -days 365 -in request.csr -signkey private.key -out ./.devcontainer/cacert/cacert.crt -passin pass:test
          cat ./.devcontainer/cacert/cacert.crt

      - name: "Copy files to the build directory"
        run: |
          for dir in ./src/features/src/*; do
            if [ -d "$dir" ]; then
              cp -f ./src/features/common/scripts/common.sh "$dir"
            fi
          done

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./.devcontainer
          file: ./.devcontainer/Dockerfile
          tags: ghcr.io/ogis-rd/flexible-devcontainer/flexible-devcontainer:test
          cache-from: type=gha
          cache-to: type=gha, mode=max
          push: false
          load: true
          build-args: |
            USERNAME=test
            UBUNTU_VERSION=${{ matrix.ubuntu-version }}

      - name: Reset docker build context
        run: docker buildx use default

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Executing all tests"
        run: devcontainer features test -p src/features --skip-autogenerated --skip-duplicated
